diff -urN ns-allinone-2.34_org/ns-2.34/common/packet.h ns-allinone-2.34_tailender/ns-2.34/common/packet.h
--- ns-allinone-2.34_org/ns-2.34/common/packet.h	2012-04-04 22:18:01.000000000 +0800
+++ ns-allinone-2.34_tailender/ns-2.34/common/packet.h	2012-04-02 23:13:17.000000000 +0800
@@ -204,12 +204,11 @@
 static const packet_t PT_UMTSDL = 74;
 static const packet_t PT_UMTSPF = 75;
 static const packet_t PT_UMTSPR = 76;
-static const packet_t PT_UMTSTP = 77;
 // added by zhangdi end
 // added by zhangdi 20120206
-static const packet_t PT_BING = 78;
+static const packet_t PT_BING = 77;
 // added by zhangdi 20120206 end
-static packet_t       PT_NTYPE = 79; // This MUST be the LAST one
+static packet_t       PT_NTYPE = 78; // This MUST be the LAST one
 
 enum packetClass
 {
@@ -350,7 +349,6 @@
         name_[PT_UMTSDL] = "UMTSDL";
         name_[PT_UMTSPF] = "UMTSPF";
         name_[PT_UMTSPR] = "UMTSPR";
-        name_[PT_UMTSTP] = "UMTSTP";
         name_[PT_BING] = "bing";
         // added by zhangdi end
 		name_[PT_INVAL]= "httpInval";
diff -urN ns-allinone-2.34_org/ns-2.34/Makefile.in ns-allinone-2.34_tailender/ns-2.34/Makefile.in
--- ns-allinone-2.34_org/ns-2.34/Makefile.in	2012-04-04 22:03:12.000000000 +0800
+++ ns-allinone-2.34_tailender/ns-2.34/Makefile.in	2012-04-02 23:17:46.000000000 +0800
@@ -181,7 +181,7 @@
 	tools/trafgen.o trace/traffictrace.o trace/mytracefile.o trace/mynhswap.o \
 	trace/umtsrt_traffictrace.o \
 	trace/umtsdl_traffictrace.o trace/umtspf_traffictrace.o trace/umtspr_traffictrace.o \
-	trace/umtstp_traffictrace.o tools/pareto.o \
+	tools/pareto.o \
 	tools/expoo.o tools/cbr_traffic.o tools/poisson.o \
 	adc/tbf.o adc/resv.o adc/sa.o tcp/saack.o \
 	tools/measuremod.o adc/estimator.o adc/adc.o adc/ms-adc.o \
diff -urN ns-allinone-2.34_org/ns-2.34/trace/cmu-trace.cc ns-allinone-2.34_tailender/ns-2.34/trace/cmu-trace.cc
--- ns-allinone-2.34_org/ns-2.34/trace/cmu-trace.cc	2012-04-04 22:01:04.000000000 +0800
+++ ns-allinone-2.34_tailender/ns-2.34/trace/cmu-trace.cc	2012-04-02 23:12:39.000000000 +0800
@@ -1369,7 +1369,6 @@
         case PT_UMTSDL:
         case PT_UMTSPF:
         case PT_UMTSPR:
-        case PT_UMTSTP:
             format_msg(p, offset);
             break;
         /* added by zhangdi end */
diff -urN ns-allinone-2.34_org/ns-2.34/trace/trace.cc ns-allinone-2.34_tailender/ns-2.34/trace/trace.cc
--- ns-allinone-2.34_org/ns-2.34/trace/trace.cc	2012-04-04 22:01:28.000000000 +0800
+++ ns-allinone-2.34_tailender/ns-2.34/trace/trace.cc	2012-04-02 23:12:57.000000000 +0800
@@ -199,7 +199,7 @@
 	/* UDP's now have seqno's too */
 	if (t == PT_RTP || t == PT_CBR || t == PT_UDP || t == PT_EXP ||
 	    t == PT_PARETO || t == PT_COOT || t == PT_POISSON || t == PT_UMTSRT ||
-        t == PT_UMTSDL || t == PT_UMTSPF || t == PT_UMTSPR || t == PT_UMTSTP)
+        t == PT_UMTSDL || t == PT_UMTSPF || t == PT_UMTSPR)
 		seqno = rh->seqno();
         else if (t == PT_RAP_DATA || t == PT_RAP_ACK)
                 seqno = raph->seqno();
diff -urN ns-allinone-2.34_org/ns-2.34/trace/umtstp_traffictrace.cc ns-allinone-2.34_tailender/ns-2.34/trace/umtstp_traffictrace.cc
--- ns-allinone-2.34_org/ns-2.34/trace/umtstp_traffictrace.cc	2012-04-04 22:00:30.000000000 +0800
+++ ns-allinone-2.34_tailender/ns-2.34/trace/umtstp_traffictrace.cc	1970-01-01 08:00:00.000000000 +0800
@@ -1,104 +0,0 @@
-#include <sys/types.h>
-#include <sys/stat.h> 
-#include <stdio.h>
-
-#include "config.h"
-#ifdef HAVE_NETINET_IN_H
-#include <netinet/in.h>
-#endif /* HAVE_NETINET_IN_H */
-
-
-#include "random.h"
-#include "object.h"
-#include "trafgen.h"
-
-#include "mytracefile.h"
-
-/* instance of a traffic generator.  has a pointer to the MytraceFile
- * object and implements the interval() function.
- */
-
-class UMTSTP_TrafficTrace : public TrafficGenerator {
- public:
-	UMTSTP_TrafficTrace();
-	int command(int argc, const char*const* argv);
-	virtual double next_interval(int &);
- protected:
-	void timeout();
-	MytraceFile *tfile_;
-	struct mytracerec trec_;
-	int ndx_; /* pointer to current trace file record */
-	void init();
-};
-
-static class UMTSTP_TrafficTraceClass : public TclClass {
- public:
-	UMTSTP_TrafficTraceClass() : TclClass("Application/Traffic/UMTSTP_Trace") {}
-	TclObject* create(int, const char*const*) {
-	        return(new UMTSTP_TrafficTrace());
-	}
-} class_umtstp_traffictrace;
-
-UMTSTP_TrafficTrace::UMTSTP_TrafficTrace()
-{
-	tfile_ = (MytraceFile *)NULL;
-}
-
-void UMTSTP_TrafficTrace::init()
-{
-	if (tfile_) {
-		int setup_result = tfile_->setup();
-		if (setup_result < 0) {
-			abort();
-		}
-		else {			
-			ndx_ = setup_result;
-		}
-	}
-    
-    if(agent_)
-        agent_->set_pkttype(PT_UMTSTP);
-}
-
-int UMTSTP_TrafficTrace::command(int argc, const char*const* argv)
-{
-	Tcl& tcl = Tcl::instance();
-	
-	if (argc == 3) {
-		if (strcmp(argv[1], "attach-tracefile") == 0) {
-			tfile_ = (MytraceFile *)TclObject::lookup(argv[2]);
-			if (tfile_ == 0) {
-				tcl.resultf("no such node %s", argv[2]);
-				return(TCL_ERROR);
-			}
-			return(TCL_OK);
-		}
-	}
-
-	return (TrafficGenerator::command(argc, argv));
-
-}
-
-void UMTSTP_TrafficTrace::timeout()
-{
-        if (! running_)
-                return;
-
-        /* send a packet */
-	// Note:  May need to set "NEW_BURST" flag in sendmsg() for 
-	// signifying a new talkspurt when using vat traces.
-	// (see expoo.cc, tcl/ex/test-rcvr.tcl)
-	agent_->sendmsg(size_);
-        /* figure out when to send the next one */
-        nextPkttime_ = next_interval(size_);
-        /* schedule it */
-        timer_.resched(nextPkttime_);
-}
-
-
-double UMTSTP_TrafficTrace::next_interval(int& size)
-{
-	tfile_->get_next(ndx_, trec_);
-	size = trec_.mytrec_size;
-	return(((double)trec_.mytrec_time)/1000000.0); /* usecs->secs */
-}
diff -urN ns-allinone-2.34_org/ns-2.34/umts/demuxer.cc ns-allinone-2.34_tailender/ns-2.34/umts/demuxer.cc
--- ns-allinone-2.34_org/ns-2.34/umts/demuxer.cc	2012-04-05 21:34:05.000000000 +0800
+++ ns-allinone-2.34_tailender/ns-2.34/umts/demuxer.cc	2012-04-19 10:29:16.000000000 +0800
@@ -42,6 +42,9 @@
 #include "demuxer.h"
 #include "packet.h"
 #include "mac.h"
+#include "mydppacketqueue.h"
+
+#include "transferdecision.h"
 
 using namespace std;
 
@@ -58,8 +61,14 @@
 
 class_Demuxer;
 
+// added by zhangdi 20120221
+void Delay_Packet_Self_Start_Timer::expire(Event *)
+{
+    d_->timeout(10);
+}
+// added by zhangdi 20120221 end
 
-Demuxer::Demuxer():BiConnector(), ntype_(0), cs_(0)
+Demuxer::Demuxer():BiConnector(), ntype_(0), cs_(0), DPSS_Timer(this), lastdeadline(0)
 {
 }
 
@@ -99,9 +108,32 @@
             downtarget_ ? sendDown(p, h) : drop(p);
         }
         else if (ch->ptype() == PT_UMTSRT || ch->ptype() == PT_UMTSDL
-            || ch->ptype() == PT_UMTSPF || ch->ptype() == PT_UMTSPR || ch->ptype() == PT_UMTSTP)
+            || ch->ptype() == PT_UMTSPF || ch->ptype() == PT_UMTSPR)
         {
-            uptarget_ ? sendUp(p, h) : drop(p);
+            if (ch->ptype() == PT_UMTSRT || ch->ptype() == PT_UMTSPR)
+            {
+                uptarget_ ? sendUp(p, h) : drop(p);
+            } 
+            else if (ch->ptype() == PT_UMTSDL || ch->ptype() == PT_UMTSPF)
+            {
+                double nowtime = Scheduler::instance().clock();
+                if ((lastdeadline + 5*0.62) > nowtime)
+                {
+                    //cout << "send directly" << endl;
+                    uptarget_ ? sendUp(p, h) : drop(p);
+                }
+                else 
+                {
+                    double tt = 0.0;
+                    // first cancel the DPSS_Timer
+                    if (DPSS_Timer.status() == TIMER_PENDING)
+                        DPSS_Timer.cancel();
+                    //tt = mdpq_.enque(p, h, 500);
+                    tt = mdpq_.enque(p, h, 1000);
+                    // restart the DPSS_Timer again
+                    DPSS_Timer.resched(tt);
+                }
+            }
         }
         else
         {
@@ -123,3 +155,35 @@
     }
 }
 
+void Demuxer::timeout(int type)
+{
+    if (type == 10)
+    {
+        if (mdpq_.length() > 0)
+        {
+            MyDPPacket ret;
+            mdpq_.deque(&ret);
+            uptarget_ ? sendUp(ret.p, ret.h) : drop(ret.p);
+
+            if (umts_channel_ == 0) // in tail and the channel is dedicated
+            {
+                DPSS_Timer.resched(0.05);
+            }
+            else if (umts_channel_ == 1) // in tail and the channel is common
+            {
+                DPSS_Timer.resched(1.5);
+            }
+            else if (umts_channel_ == 2) // while the channel is idle, the umts_istranNRT is false
+            {
+                DPSS_Timer.resched(1);
+            }
+        }
+        else
+        {
+            //cout << "new lastdeadlin" << endl;
+            lastdeadline = Scheduler::instance().clock();
+        }
+
+    }
+}
+
diff -urN ns-allinone-2.34_org/ns-2.34/umts/demuxer.h ns-allinone-2.34_tailender/ns-2.34/umts/demuxer.h
--- ns-allinone-2.34_org/ns-2.34/umts/demuxer.h	2012-04-05 21:37:24.000000000 +0800
+++ ns-allinone-2.34_tailender/ns-2.34/umts/demuxer.h	2012-04-05 22:28:37.000000000 +0800
@@ -48,12 +48,28 @@
 #define ns_demuxer_h
 
 #include "bi-connector.h"
+#include "mypacketqueue.h"
+#include "mydelaypacketqueue.h"
+#include "myprefetchpacketqueue.h"
+#include "mydppacketqueue.h"
 #include "timer-handler.h"
-#include "tcs.h"
 
 class Demuxer;
 class CS;
 
+// added by zhangdi 20120221
+class Delay_Packet_Self_Start_Timer: public TimerHandler
+{
+public:
+    Delay_Packet_Self_Start_Timer(Demuxer *d):TimerHandler()
+    {
+        d_ = d;
+} protected:
+    virtual void expire(Event * e);
+    Demuxer     * d_;
+};
+// added by zhangdi end 20120221
+
 class Demuxer:public BiConnector
 {
 public:
@@ -61,9 +77,20 @@
 
     int       command(int argc, const char *const *argv);
     void        recv(Packet *, Handler * callback = 0);
+    virtual void timeout(int type);
 
-    int ntype_; // rnc: 1, bs: 2, ue: 3
+    //double NRT_DELAY_;
+    //double NRT_INTERVAL_;
+    //double NRT_RECOVER_;
+
+    int ntype_; // rnc: 0, bs: 1, ue: 2 and bigger
     CS  *cs_;
+
+    MyDPPacketQueue mdpq_;
+
+    Delay_Packet_Self_Start_Timer DPSS_Timer;
+
+    double lastdeadline;
 };
 
 #endif
diff -urN ns-allinone-2.34_org/ns-2.34/umts/tcs.cc ns-allinone-2.34_tailender/ns-2.34/umts/tcs.cc
--- ns-allinone-2.34_org/ns-2.34/umts/tcs.cc	2012-04-19 10:20:31.000000000 +0800
+++ ns-allinone-2.34_tailender/ns-2.34/umts/tcs.cc	2012-04-19 10:31:26.000000000 +0800
@@ -44,6 +44,7 @@
 #include "mac.h"
 
 #include "demuxer.h"
+#include "transferdecision.h"
 
 #include <iostream>
 
@@ -115,17 +116,18 @@
 // added by zhangdi 20120217 end
 
 // added by zhangdi 20120416 start
-void Pending_Before_IDLE_to_DCH::expire(Event *e)
+void Pending_Before_IDLE_to_DCH::expire(Event *)
 {
     a_->timeout(30);
 }
 
-void Pending_Before_FACH_to_DCH::expire(Event *e)
+void Pending_Before_FACH_to_DCH::expire(Event *)
 {
     a_->timeout(31);
 }
 // added by zhangdi 20120416 end
 
+// added by zhangdi 20120401 end
 void Thp_Report_Timer::expire(Event *)
 {
     a_->timeout(0);
@@ -158,10 +160,6 @@
     bind_time("PENDING_TIME_AFTER_TRIGGER_", &PENDING_TIME_AFTER_TRIGGER_);
     bind_time("BUFF_CHECK_INTERVAL_", &BUFF_CHECK_INTERVAL_);
 
-    // added by zhangdi 20120307
-    bind_time("MY_BUFF_CHECK_INTERVAL_", &MY_BUFF_CHECK_INTERVAL_);
-    // added by zhangdi 20120307 end
-
     BRT.resched(BUFF_CHECK_INTERVAL_);
     THP_RT.resched(THP_REPORT_INTERVAL_);
 }
@@ -316,6 +314,7 @@
             }
             else if (size > DL_RLC_BUF_UPSWITCH_THRESH_sRAB_)
             {
+                //cout << "isTransNRT:" <<  umts_isTransNRT_ <<  ", bsup2, " << size << endl;
                 cs_->timeout(7);
                 
                 PTAT.resched(PENDING_TIME_AFTER_TRIGGER_);
@@ -333,6 +332,7 @@
         }
         else if (size > UL_RLC_BUF_UPSWITCH_THRESH_sRAB_)
         {
+            //cout << "isTransNRT:" << umts_isTransNRT_ << ", ueup2, " << size << endl;
             cs_->timeout(7);
             
             PTAT.resched(PENDING_TIME_AFTER_TRIGGER_);
@@ -349,7 +349,7 @@
 }
 
 
-CS::CS():NsObject(), uplink_(0), downlink_(0), bs_demuxer_(0), ue_demuxer_(0), uplink_am_(NULL), downlink_am_(NULL), downlink_um_(NULL), uplink_um_(NULL),DS_T_sRab(this), DS_DCH_Dtimer(this), DS_COMMON_Dtimer(this), PBDDT(this), PBCDT(this), PBI2D(this), PBF2D(this) 
+CS::CS():NsObject(), uplink_(0), downlink_(0), bs_demuxer_(0), ue_demuxer_(0), uplink_am_(NULL), downlink_am_(NULL), downlink_um_(NULL), uplink_um_(NULL),DS_T_sRab(this), DS_DCH_Dtimer(this), DS_COMMON_Dtimer(this), PBDDT(this), PBCDT(this), PBI2D(this), PBF2D(this)
 {
     bind_time("DOWNSWITCH_TIMER_sRAB_", &DOWNSWITCH_TIMER_sRAB_);
     bind_time("DOWNSWITCH_DCH_DELAY_", &DOWNSWITCH_DCH_DELAY_);
@@ -546,6 +546,8 @@
         uplink_->direction() = common;
         downlink_->direction() = common;
 
+        umts_channel_ = common;
+
         cout << "st\t" << "d2f\t" << Scheduler::instance().clock() << endl;
 
         if (uplink_am_ != NULL && downlink_am_ != NULL)
@@ -564,6 +566,8 @@
         uplink_->direction() = idle;
         downlink_->direction() = idle;
 
+        umts_channel_ = idle;
+
         cout << "st\t" << "f2i\t" << Scheduler::instance().clock() << endl;
 
         // I think the below we can not add
@@ -615,7 +619,7 @@
             {
                 DS_COMMON_Dtimer.cancel();
             }
-           
+
             // must check the status of this timer
             if (PBF2D.status() == TIMER_IDLE)
 	    {
@@ -640,6 +644,8 @@
         uplink_->direction() = dedicated;
         downlink_->direction() = dedicated;
 
+        umts_channel_ = dedicated;
+
         cout << "st\t" << "i2d\t" << Scheduler::instance().clock() << endl;
 
         if ( uplink_am_ != NULL && downlink_am_ !=NULL )
@@ -652,7 +658,7 @@
             uplink_um_->CSwitch(us_node_bw_, us_node_tti_);
             downlink_um_->CSwitch(us_bs_bw_, us_bs_tti_);
         }
-    } // type == 31 is for some delay before FACH to DCH
+    }// type == 31 is for some delay before FACH to DCH
     else if (type == 31)
     {
 	cout << "st\t" << "p2e\t" << Scheduler::instance().clock() << endl;
@@ -660,6 +666,8 @@
         uplink_->direction() = dedicated;
         downlink_->direction() = dedicated;
 
+        umts_channel_ = dedicated;
+
         cout << "st\t" << "f2d\t" << Scheduler::instance().clock() << endl;
 
         if ( uplink_am_ != NULL && downlink_am_ !=NULL )
@@ -673,5 +681,6 @@
             downlink_um_->CSwitch(us_bs_bw_, us_bs_tti_);
         }
     }
+
 }
 
diff -urN ns-allinone-2.34_org/ns-2.34/umts/tcs.h ns-allinone-2.34_tailender/ns-2.34/umts/tcs.h
--- ns-allinone-2.34_org/ns-2.34/umts/tcs.h	2012-04-16 14:10:42.000000000 +0800
+++ ns-allinone-2.34_tailender/ns-2.34/umts/tcs.h	2012-04-16 13:45:59.000000000 +0800
@@ -127,7 +127,6 @@
 } protected:
     virtual void expire(Event *e);
     CS      *a_;
-
 };
 
 class Pending_Before_FACH_to_DCH:public TimerHandler
@@ -142,10 +141,8 @@
 };
 
 // added by zhangdi 20120416 end
-
 // added by zhangdi end
 
-
 class Thp_Report_Timer:public TimerHandler
 {
 public:
@@ -234,13 +231,11 @@
     Pending_Before_DCH_Down_Timer PBDDT;
     Pending_Before_COMMON_Down_Timer PBCDT;
     // added by zhangdi 20120217 end
-    
+    //
     // added by zhangdi 20120416 start
     Pending_Before_IDLE_to_DCH PBI2D;
     Pending_Before_FACH_to_DCH PBF2D;
-    // added by zhangdi 20120416 end
-
-
+    // added by zhangdi 20120406 end
 };
 
 class TCM:  public BiConnector
@@ -284,7 +279,6 @@
     double      PENDING_TIME_AFTER_TRIGGER_;
     double      BUFF_CHECK_INTERVAL_;
 
-    double      MY_BUFF_CHECK_INTERVAL_;
 
     // added by zhangdi start
     double      IDLE_DELAY_INTERVAL_;
@@ -294,6 +288,7 @@
     Report_Processing_Timer RPT;
     Buff_Check_Timer BRT;
     Pending_Timer PTAT;
+
 };
 
 #endif
